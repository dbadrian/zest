name: Build Android

on:
  workflow_call:
  workflow_dispatch: # manual

jobs:
  build-android:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2
      # Setup the Python environment for backend
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"
      # Setup the flutter environment for frontend
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "23"

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - run: flutter --version
      - run: flutter --disable-analytics

      - name: Prepare environment.
        run: flutter pub get

      - name: Build runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Set environment variables
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install Ubuntu Dependencies
        run: |
          sudo apt-get update  
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev

      - name: "Build Frontend: Android APK & App Bundle"
        run: |
          # flutter config --enable-linux-desktop
          flutter pub get
          # flutter build apk --split-per-abi  --release
          flutter build appbundle --release

      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.GPLAY_KEYSTORE }}
        run: |
          # import keystore from secrets
          echo $KEYSTORE_BASE64 | base64 -d --ignore-garbage > $RUNNER_TEMP/my_production.keystore
      
      - name: Sign Android App Bundle
        run: jarsigner -keystore $RUNNER_TEMP/my_production.keystore -storepass '${{ secrets.GPLAY_KEYSTORE_PASSWORD }}' -keypass '${{ secrets.GPLAY_KEYSTORE_PASSWORD }}' -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/bundle/release/app-release-signed.aab build/app/outputs/bundle/release/app-release.aab upload

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifact
          path: |
            ./frontend/build/app/outputs/bundle/release/app-release-signed.aab
          retention-days: 1